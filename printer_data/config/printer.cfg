[include mainsail.cfg]

# host MCU service is preinstalled and ready to use with:
[mcu CB1]
serial: /tmp/klipper_host_mcu

# [include generic-bigtreetech-xxx.cfg]


# This file contains common pin mappings for the BIGTREETECH Manta M5P
# To use this config, the firmware should be compiled for the
# STM32G0B1 with a "8KiB bootloader" "8 MHz crystal"
# and "USB (on PA11/PA12)" or "CAN bus (on PD0/PD1)".

# See docs/Config_Reference.md for a description of parameters.

# For debugging it may be helpful to allow the axis to move without homing
# Disable once ready to print
# [force_move]
# enable_force_move: True
#   Set to true to enable FORCE_MOVE and SET_KINEMATIC_POSITION
#   extended G-Code commands. The default is false.


[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_1F0044000A504B5735313920-if00

 # The rpi microcontroller is used as secondary.
# Typically, both the X and Y axes
# are connected to the main micro-controller. The rpi microcontroller is used
# on non time-critical functions such as enclosure sensors, additional fan or
# light sources
[mcu CB1]
serial: /tmp/klipper_host_mcu

# [output_pin pifan]
# pin: host:gpio26

[include mainsail.cfg]
[virtual_sdcard]
path: /home/biqu/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[include configurations.cfg]
[include timelapse.cfg]

# default_parameter_BED_TEMP: 60
# default_parameter_EXTRUDER_TEMP: 200

[stepper_x]
step_pin: PC8
dir_pin: !PC9
enable_pin: !PA15
microsteps: 16
rotation_distance: 40
#endstop_pin: ^PD3
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_endstop: -5
# position_max: 290
position_max: 300
position_min: -5
# homing_speed: 50
homing_speed: 50
homing_retract_dist: 0

[stepper_y]
step_pin: PA10
dir_pin: !PA14
enable_pin: !PA13
microsteps: 16
rotation_distance: 40
endstop_pin: ^PD2
#endstop_pin: tmc2209_stepper_y:virtual_endstop
# position_endstop: -20
position_endstop: -20
# position_max: 280
# position_max: 290
position_max: 300
# position_min: -20
position_min: -20
# homing_speed: 50
homing_speed: 50
homing_retract_dist: 0
homing_positive_dir: false

[stepper_z]
step_pin: PC6
dir_pin: PC7
enable_pin: !PA9
microsteps: 16
rotation_distance: 8
#endstop_pin: ^PC3
endstop_pin: probe:z_virtual_endstop    # enable to use BLTouch
position_min: -2                         # enable to use BLTouch
position_max: 275
[safe_z_home]                         # enable for BLTouch
home_xy_position: 150, 150
speed: 50
z_hop: 10
z_hop_speed: 5

# To run retration test
[firmware_retraction]
retract_length: 0.8
retract_speed: 60
unretract_extra_length: 0
unretract_speed: 60

# [firmware_retraction]
# retract_length: 1
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
# retract_speed: 35
#   The speed of retraction, in mm/s. The default is 20 mm/s.
# unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
# unretract_speed: 10
#   The speed of unretraction, in mm/s. The default is 10 mm/s.

[bltouch]                             # enable for BLTouch - fast-mode
sensor_pin: PC13
control_pin: PC15
pin_up_touch_mode_reports_triggered: True
probe_with_touch_mode: True
x_offset: -43                          # modify as needed for bltouch location
y_offset: -10                          # modify as needed for bltouch location
#z_offset: 2.5                          # modify as needed for bltouch or run PROBE_CALIBRATE
#z_offset: 0.0                          # modify as needed for bltouch or run PROBE_CALIBRATE
# speed:35
speed: 20
samples: 2
# sample_retract_dist: 5.0              # Can be set lower, example 2.5 depending on height of bltouch from bed
lift_speed: 40
# samples_tolerance_retries: 3

# samples_result: median
# samples_tolerance: 0.0075
# samples_tolerance_retries: 10
# stow_on_each_sample: true
# TESTING
samples_tolerance: 0.01
samples_tolerance_retries: 3
stow_on_each_sample: true

[bed_mesh]                            # enable for BLTouch
speed: 150
mesh_min: 70, 40
mesh_max: 240, 280
#algorithm: bicubic
algorithm: lagrange
probe_count: 5,5                      # 25 points due to large bed size
horizontal_move_z: 5
adaptive_margin: 5

[bed_screws]
screw1: 25, 25
screw2: 275, 25
screw3: 275, 275
screw4: 25, 275

[extruder]
max_extrude_only_distance: 100.0
step_pin: PB12
dir_pin: !PB11
enable_pin: !PA8
microsteps: 16
#Calibrate-see
#https://www.klipper3d.org/Rotation_Distance
#Original Value
# rotation_distance: 31.901
#Calcualted Value
# Prev Value
# rotation_distance: 23.0028158902
rotation_distance: 23.04882152198
# rotation_distance = <full_steps_per_rotation> * <microsteps> / <steps_per_mm>
# Measure 120mm, then extrude 100mm
# G1 E100 F100
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA1
#control: pid
#pid_Kp: 32.565
#pid_Ki: 2.495
#pid_Kd: 106.245
min_temp: 0
max_temp: 300
# Calibrate - see https://www.klipper3d.org/Pressure_Advance.html
pressure_advance: 0.05
max_extrude_cross_section: 5

#[filament_switch_sensor material_0]
[filament_switch_sensor my_sensor]
switch_pin: PC2
pause_on_runout: True
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
#runout_gcode:
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
#insert_gcode:
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.
#switch_pin:
#   The pin on which the switch is connected. This parameter must be
#   provided.

[heater_bed]
heater_pin: PA5
sensor_type: Generic 3950
# sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
#control: pid
#pid_Kp: 162.06
#pid_Ki: 17.89
#pid_Kd: 978.75
min_temp: 0
max_temp: 130

[fan]
pin: PA4
#   Output pin controlling the fan. This parameter must be provided.
max_power: 1.0
#   The maximum power (expressed as a value from 0.0 to 1.0) that the
#   pin may be set to. The value 1.0 allows the pin to be set fully
#   enabled for extended periods, while a value of 0.5 would allow the
#   pin to be enabled for no more than half the time. This setting may
#   be used to limit the total power output (over extended periods) to
#   the fan. If this value is less than 1.0 then fan speed requests
#   will be scaled between zero and max_power (for example, if
#   max_power is .9 and a fan speed of 80% is requested then the fan
#   power will be set to 72%). The default is 1.0.
#shutdown_speed: 0
#   The desired fan speed (expressed as a value from 0.0 to 1.0) if
#   the micro-controller software enters an error state. The default
#   is 0.
#cycle_time: 0.010
#   The amount of time (in seconds) for each PWM power cycle to the
#   fan. It is recommended this be 10 milliseconds or greater when
#   using software based PWM. The default is 0.010 seconds.
#hardware_pwm: False
#   Enable this to use hardware PWM instead of software PWM. Most fans
#   do not work well with hardware PWM, so it is not recommended to
#   enable this unless there is an electrical requirement to switch at
#   very high speeds. When using hardware PWM the actual cycle time is
#   constrained by the implementation and may be significantly
#   different than the requested cycle_time. The default is False.
#kick_start_time: 0.100
#   Time (in seconds) to run the fan at full speed when either first
#   enabling or increasing it by more than 50% (helps get the fan
#   spinning). The default is 0.100 seconds.
#off_below: 0.0
#   The minimum input speed which will power the fan (expressed as a
#   value from 0.0 to 1.0). When a speed lower than off_below is
#   requested the fan will instead be turned off. This setting may be
#   used to prevent fan stalls and to ensure kick starts are
#   effective. The default is 0.0.
#
#   This setting should be recalibrated whenever max_power is adjusted.
#   To calibrate this setting, start with off_below set to 0.0 and the
#   fan spinning. Gradually lower the fan speed to determine the lowest
#   input speed which reliably drives the fan without stalls. Set
#   off_below to the duty cycle corresponding to this value (for
#   example, 12% -> 0.12) or slightly higher.
#tachometer_pin:
#   Tachometer input pin for monitoring fan speed. A pullup is generally
#   required. This parameter is optional.
#tachometer_ppr: 2
#   When tachometer_pin is specified, this is the number of pulses per
#   revolution of the tachometer signal. For a BLDC fan this is
#   normally half the number of poles. The default is 2.
#tachometer_poll_interval: 0.0015
#   When tachometer_pin is specified, this is the polling period of the
#   tachometer pin, in seconds. The default is 0.0015, which is fast
#   enough for fans below 10000 RPM at 2 PPR. This must be smaller than
#   30/(tachometer_ppr*rpm), with some margin, where rpm is the
#   maximum speed (in RPM) of the fan.
#enable_pin:
#   Optional pin to enable power to the fan. This can be useful for fans
#   with dedicated PWM inputs. Some of these fans stay on even at 0% PWM
#   input. In such a case, the PWM pin can be used normally, and e.g. a
#   ground-switched FET(standard fan pin) can be used to control power to
#   the fan.

# [heater_fan my_nozzle_fan]
[heater_fan extruder]
# [fan]
pin: PA3
# #max_power:
heater: extruder
# #   Name of the config section defining the heater that this fan is
# #   associated with. If a comma separated list of heater names is
# #   provided here, then the fan will be enabled when any of the given
# #   heaters are enabled. The default is "extruder".
heater_temp: 50.0
# #   A temperature (in Celsius) that the heater must drop below before
# #   the fan is disabled. The default is 50 Celsius.
fan_speed: 1.0
# #   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
# #   will be set to when its associated heater is enabled. The default
# #   is 1.0


# Example 3:Using a pin on another gpiochip connected to the RPi
# (in this case on an MCP23017)
# [fan]
# pin: host:gpiochip2/gpio7
[controller_fan stepper_cooling]
# pin: PA3
#[heater_fan SoC_fan]
#pin: CB1:gpio79
#pin: RPI:gpio26
pin: CB1:gpio79
# stepper: stepper_x, stepper_y, stepper_z, extruder
idle_speed: 0 #M84
max_power: 1
off_below: 1
shutdown_speed: 0 # Power off when shutdown
idle_timeout: 1 # Fast timeout unless steppers or a heater is live
heater: extruder, heater_bed
#[controller_fan my_controller_fan]
#pin:
#max_power:
#fan_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver is active.
#   The default is 1.0
#idle_timeout:
#   The amount of time (in seconds) after a stepper driver or heater
#   was active and the fan should be kept running. The default
#   is 30 seconds.
#idle_speed:
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver was active and
#   before the idle_timeout is reached. The default is fan_speed.
#heater:
#stepper:
#   Name of the config section defining the heater/stepper that this fan
#   is associated with. If a comma separated list of heater/stepper names
#   is provided here, then the fan will be enabled when any of the given
#   heaters/steppers are enabled. The default heater is "extruder", the
#   default stepper is all of them.



[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

########################################
# TMC2209 configuration
########################################

[tmc2209 stepper_x]
uart_pin: PD9
run_current: 0.800
diag_pin: ^PD3
# 255 is most sensitive value, 0 is least sensitive
driver_SGTHRS: 100
stealthchop_threshold: 99999


[tmc2209 stepper_y]
uart_pin: PD8
run_current: 0.800
diag_pin: ^PD2
# 255 is most sensitive value, 0 is least sensitive
driver_SGTHRS: 85
stealthchop_threshold: 99999

[tmc2209 stepper_z]
uart_pin: PB10
run_current: 0.800
diag_pin: PC3
stealthchop_threshold: 99999

[tmc2209 extruder]
uart_pin: PB2
run_current: 0.600
diag_pin: PC2

#[tmc2209 extruder1]
#uart_pin: PA6
#run_current: 0.600
#diag_pin:

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PD5, EXP1_3=PB3, EXP1_5=PB5, EXP1_7=PB7, EXP1_9=<GND>,
    EXP1_2=PD4,  EXP1_4=PD6, EXP1_6=PB4, EXP1_8=PB6, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PB14, EXP2_3=PB8, EXP2_5=PC10, EXP2_7=PC12,  EXP2_9=<GND>,
    EXP2_2=PB13, EXP2_4=PB9, EXP2_6=PB15, EXP2_8=<RST>, EXP2_10=<NC>

# See the sample-lcd.cfg file for definitions of common LCD displays.
######################################################################
# 128x64 Full Graphic Creality CR10 / ENDER 3 stockdisplay
######################################################################

# This section is used for a Creality "12864" display with a single
# ribbon cable between the display's EXP3 plug and the
# micro-controller board's EXP1 connector.

[display]
lcd_type: st7920
cs_pin: EXP1_7
sclk_pin: EXP1_6
sid_pin: EXP1_8
encoder_pins: ^EXP1_5, ^EXP1_3
click_pin: ^!EXP1_2

[output_pin beeper]
pin: EXP1_1

[neopixel my_neopixel]
pin: PC11
#   The pin connected to the neopixel. This parameter must be
#   provided.
chain_count: 8
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
color_order: GRB
#   Set the pixel order required by the LED hardware (using a string
#   containing the letters R, G, B, W with W optional). Alternatively,
#   this may be a comma separated list of pixel orders - one for each
#   LED in the chain. The default is GRB.
initial_RED: 1.0
initial_GREEN: 1.0
initial_BLUE: 1.0
#initial_WHITE: 0.0
#   See the "led" section for information on these parameters.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 33.640
#*# pid_ki = 2.578
#*# pid_kd = 109.752
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 70.660
#*# pid_ki = 1.044
#*# pid_kd = 1195.037
#*#
#*# [bltouch]
#*# z_offset = 2.299
